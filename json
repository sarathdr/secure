package com.usage.verticles.services;

import com.usage.verticles.ServerVerticle;
import io.vertx.core.DeploymentOptions;
import io.vertx.core.Future;
import io.vertx.core.Vertx;
import io.vertx.core.json.JsonObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ApiService extends DeployVerticleService {
    private static final Logger LOG = LoggerFactory.getLogger(ApiService.class);
    private static final String SERVICE_NAME = "Server";

    private static ApiService INSTANCE;

    private ApiService(final int instances) {
        super(instances);
    }

    public static ApiService getInstance(final int instances) {
        if (INSTANCE == null) {
            INSTANCE = new ApiService(instances);
        }

        return INSTANCE;
    }


    @Override
    public Future<Boolean> deploy(Vertx vertx, JsonObject config) {
        return vertx.deployVerticle(
                ServerVerticle::create,
                new DeploymentOptions()
                        .setConfig(config)
                        .setInstances(getInstanceCount())
        ).compose(
                result -> {
                    LOG.info("{} successfully deployed", getServiceName());
                    setStatus(ServiceStatus.ACTIVE);
                    return Future.succeededFuture(true);
                }
        );
    }

    @Override
    public String getServiceName() {
        return SERVICE_NAME;
    }

}
